//
// Generated file, do not edit! Created by nedtool 4.6 from src/node/communication/routing/myAppRouting/myAppRoutingControl.msg.
//

#ifndef _MYAPPROUTINGCONTROL_M_H_
#define _MYAPPROUTINGCONTROL_M_H_

#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0406
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif



/**
 * Enum generated from <tt>src/node/communication/routing/myAppRouting/myAppRoutingControl.msg:13</tt> by nedtool.
 * <pre>
 * enum myAppRoutingControlDef
 * {
 * 
 *     MPRINGS_NOT_CONNECTED = 1;
 *     MPRINGS_CONNECTED_TO_TREE = 2;
 *     MPRINGS_TREE_LEVEL_UPDATED = 3;
 * }
 * </pre>
 */
enum myAppRoutingControlDef {
    MPRINGS_NOT_CONNECTED = 1,
    MPRINGS_CONNECTED_TO_TREE = 2,
    MPRINGS_TREE_LEVEL_UPDATED = 3
};

/**
 * Class generated from <tt>src/node/communication/routing/myAppRouting/myAppRoutingControl.msg:19</tt> by nedtool.
 * <pre>
 * message myAppRoutingControlMessage
 * {
 *     int myAppRoutingControlMessageKind @enum(myAppRoutingControlDef);
 *     int sinkID;
 *     int level;
 * }
 * </pre>
 */
class myAppRoutingControlMessage : public ::cMessage
{
  protected:
    int myAppRoutingControlMessageKind_var;
    int sinkID_var;
    int level_var;

  private:
    void copy(const myAppRoutingControlMessage& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const myAppRoutingControlMessage&);

  public:
    myAppRoutingControlMessage(const char *name=NULL, int kind=0);
    myAppRoutingControlMessage(const myAppRoutingControlMessage& other);
    virtual ~myAppRoutingControlMessage();
    myAppRoutingControlMessage& operator=(const myAppRoutingControlMessage& other);
    virtual myAppRoutingControlMessage *dup() const {return new myAppRoutingControlMessage(*this);}
    virtual void parsimPack(cCommBuffer *b);
    virtual void parsimUnpack(cCommBuffer *b);

    // field getter/setter methods
    virtual int getMyAppRoutingControlMessageKind() const;
    virtual void setMyAppRoutingControlMessageKind(int myAppRoutingControlMessageKind);
    virtual int getSinkID() const;
    virtual void setSinkID(int sinkID);
    virtual int getLevel() const;
    virtual void setLevel(int level);
};

inline void doPacking(cCommBuffer *b, myAppRoutingControlMessage& obj) {obj.parsimPack(b);}
inline void doUnpacking(cCommBuffer *b, myAppRoutingControlMessage& obj) {obj.parsimUnpack(b);}


#endif // ifndef _MYAPPROUTINGCONTROL_M_H_

